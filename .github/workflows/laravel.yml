name: Laravel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build and start containers
        run: |
          docker-compose -f ./docker-compose.yaml up -d
          docker-compose -f ./docker-compose.yaml ps

      - name: Install Dependencies
        run: docker-compose -f ./docker-compose.yaml exec -T app composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: docker-compose -f ./docker-compose.yaml exec -T app php artisan key:generate

      - name: Directory Permissions
        run: docker-compose -f ./docker-compose.yaml exec -T app chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          docker-compose -f ./docker-compose.yaml exec -T app php artisan db:seed --force
          docker-compose -f ./docker-compose.yaml exec -T app php artisan cache:clear
          docker-compose -f ./docker-compose.yaml exec -T app php artisan route:clear
          docker-compose -f ./docker-compose.yaml exec -T app php artisan config:clear
          docker-compose -f ./docker-compose.yaml exec -T app php artisan view:clear
          docker-compose -f ./docker-compose.yaml exec -T app php artisan key:generate

      - name: Save Docker images as artifacts
        run: |
          mkdir -p docker_images
          docker images --format "{{.Repository}}:{{.Tag}}" | grep t-nsa-800 | while IFS=: read -r repo tag; do
            docker save -o "docker_images/${repo}_${tag}.tar" "${repo}:${tag}"
          done
        working-directory: ${{ github.workspace }}

      # - name: List contents of docker_images directory
      #   run: ls -l docker_images/

      # - name: Upload Docker images as artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: docker-images
      #     path: docker_images/
      - name: Run Ansible playbook to copy artifacts
        uses: appleboy/ansible-action@v2
        with:
          playbook: copy_artifacts.yml
          extra_vars: artifact_url=https://github.com/${{ github.repository }}/raw/${{ github.ref }}/docker_images
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
          ANSIBLE_REMOTE_TEMP: "/tmp"
          ANSIBLE_TRANSPORT: "ssh"
          ANSIBLE_SSH_PIPELINING: "true"
          ANSIBLE_CONFIG: "./ansible.cfg"
          ANSIBLE_FORCE_COLOR: "true"
