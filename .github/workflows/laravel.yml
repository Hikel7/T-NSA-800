name: Laravel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'

    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Replace environment variables
      run: |
        cp .env.example .env
        php -r '
          $replacements = [
            "DB_USERNAME" => $_ENV["DB_USERNAME"],
            "DB_PASSWORD" => $_ENV["DB_PASSWORD"],
            "DB_DATABASE" => $_ENV["DB_DATABASE"],
            "DB_HOST" => $_ENV["DB_HOST"],
            "DB_PORT" => $_ENV["DB_PORT"],
            "MYSQL_ATTR_SSL_CA" => $_ENV["MYSQL_ATTR_SSL_CA"],
          ];

          $envContent = file_get_contents(".env");

          foreach ($replacements as $key => $value) {
            $envContent = preg_replace("/$key=.*/", "$key=$value", $envContent);
          }

          file_put_contents(".env", $envContent);
        '

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: php artisan db:seed --force |  php artisan cache:clear | php artisan route:clear | php artisan config:clear | php artisan view:clear

    - name: Migrate Database
      run: php artisan migrate --force

build-and-push-docker:
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Log in to the Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}

deploy-to-azure:
  needs: build-and-push-docker
  runs-on: ubuntu-latest
  steps:
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'myAppServiceLostOps'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: '${{ secrets.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}'