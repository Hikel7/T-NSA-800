# - name: Deploy Docker Images to App
#   hosts: app_host
#   tasks:
#     - name: Copy Docker Image for App
#       copy:
#         src: "{{ lookup('env', 'DOCKER_IMAGES_PATH }}/t-nsa-800_app_latest.tar"
#         dest: "/tmp/t-nsa-800_app_latest.tar"

#     - name: Load Docker Image for App
#       command: docker load -i /tmp/t-nsa-800_app_latest.tar
#       become: yes

#     - name: Run php artisan key:generate inside container
#       command: sudo docker exec application php artisan key:generate
#       become: yes
#       register: key_generate_result
#       ignore_errors: yes

#     - name: Check if key:generate command was successful
#       debug:
#         msg: "{{ key_generate_result.stdout }}"
#       when: key_generate_result.rc == 0

#     - name: Run Docker Container for App
#       docker_container:
#         name: application
#         image: "t-nsa-800_app:latest"
#         state: started
#         ports:
#           - "80:80"
#       become: yes

# - name: Deploy Docker Images to DB
#   hosts: db_host
#   tasks:
#     - name: Copy Docker Image for DB
#       copy:
#         src: "{{ lookup('env', 'DOCKER_IMAGES_PATH }}/t-nsa-800_db_latest.tar"
#         dest: "/tmp/t-nsa-800_db_latest.tar"

#     - name: Load Docker Image for DB
#       command: docker load -i /tmp/t-nsa-800_db_latest.tar
#       become: yes

#     - name: Run Docker Container for DB
#       docker_container:
#         name: database
#         image: "t-nsa-800_db:latest"
#         state: started
#         published_ports:
#           - "3307:3307"
#       become: yes

- name: Force reinstall MySQL 5.7 and allow public access
  hosts: db_host
  become: true
  vars:
    mysql_database: "lostopsdb"
    mysql_user: "mysqladmin@mysqlserverops"
    mysql_password: "H@Sh1CoR3P@ssw0rd"
    mysql_root_password: "H@Sh1CoR3P@ssw0rd"
    mysql_port: "3307" # Specify the desired port here

  tasks:
    # - name: Ex√©cuter la commande iptables
    #   ansible.builtin.command:
    #     cmd: sudo iptables -R INPUT 3
    #   become: yes

      - name: Update package lists
        apt:
          update_cache: yes
        become: yes

      - name: Install pip for Python3
        apt:
          name: python3-pip
          state: present
        become: yes

      - name: Install python3-mysqldb
        apt:
          name: python3-mysqldb
          state: present
        become: yes

      - name: Install ufw
        apt:
          name: ufw
          state: present

      - name: Deny everything and enable UFW
        community.general.ufw:
          state: enabled
          policy: deny

      - community.general.ufw:
          rule: allow
          name: OpenSSH

      - name: Allow all access to tcp port 80
        community.general.ufw:
          rule: allow
          port: '3306'

      - name: Install MariaDB Server
        apt:
          name: mariadb-server
          state: present
        become: yes

      - name: Start and enable MariaDB Service
        service:
          name: mariadb
          state: started
          enabled: yes
        become: yes

      - name: Allow MariaDB to listen on all interfaces
        lineinfile:
          path: /etc/mysql/mariadb.conf.d/50-server.cnf
          regexp: '^bind-address'
          line: 'bind-address = 0.0.0.0'
          state: present

      - name: Create a remote user with access from any host
        mysql_user:
          login_user: "{{ mysql_user }}"
          login_password: "{{ mysql_root_password }}"
          name: "{{ mysql_user }}"
          password: "{{ mysql_root_password }}"
          host: '%'
          priv: "{{ mysql_database }}.*:ALL"
          state: present

      - name: Ensure root password is set
        mysql_user:
          login_user: root
          login_password: "{{ mysql_root_password }}"
          name: root
          password: "{{ mysql_root_password }}"
          host_all: yes


      - name: Add database
        mysql_db:
          login_user: root
          login_password: "{{ mysql_root_password }}"
          name: "{{ mysql_database') }}"
          state: present

      - name: Flush privileges
        mysql_query:
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: FLUSH PRIVILEGES;

      - name: restart mariadb
        service:
          name: mariadb
          state: restarted
